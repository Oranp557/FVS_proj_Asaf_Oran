MODULE main
VAR
    move : {l,u,r,d};
    man_c : 1..5;
    man_r : 1..3;
    box_1_c : 1..5;
    box_1_r : 1..3;
    goal_1_c : 1..5;
    goal_1_r : 1..3;
    walls : array 1..3 of array 1..5 of 0..1;
ASSIGN
    init(man_c) := 3;
    init(man_r) := 2;
    init(box_1_c) := 2;
    init(box_1_r) := 2;
    goal_1_c := 4;
    goal_1_r := 2;
    walls[1][1] := 1;
    walls[1][2] := 1;
    walls[1][3] := 1;
    walls[1][4] := 1;
    walls[1][5] := 1;
    walls[2][1] := 1;
    walls[2][2] := 0;
    walls[2][3] := 0;
    walls[2][4] := 0;
    walls[2][5] := 1;
    walls[3][1] := 1;
    walls[3][2] := 1;
    walls[3][3] := 1;
    walls[3][4] := 1;
    walls[3][5] := 1;
next(man_c) :=
    case
        move = r & (mv_r | push_r) & (man_c < 5) : man_c + 1;
        move = l & (mv_l | push_l) & (man_c > 1) : man_c - 1;
        move = u : man_c;
        move = d : man_c;
        TRUE : man_c;
    esac;
next(man_r) :=
    case
        move = r : man_r;
        move = l : man_r;
        move = u & (mv_u | push_u) & (man_r > 1) : man_r - 1;
        move = d & (mv_d | push_d) & (man_r < 3) : man_r + 1;
        TRUE : man_r;
    esac;
next(box_1_c) :=
    case
        push_l & box_1_on_l & (box_1_c < 5) : box_1_c - 1;
        push_r & box_1_on_r & (box_1_c > 1) : box_1_c + 1;
        TRUE: box_1_c;
    esac;
next(box_1_r) :=
    case
        push_u & box_1_on_t & (box_1_r > 1) : box_1_r - 1;
        push_d & box_1_on_b & (box_1_r < 3) : box_1_r + 1;
        TRUE: box_1_r;
    esac;
DEFINE
    mv_r := (move = r) & (man_c < 5) & (walls[man_r][man_c + 1] = 0) & !box_1_on_r;
    mv_l := (move = l) & (man_c > 1) & (walls[man_r][man_c - 1] = 0) & !box_1_on_l;
    mv_u := (move = u) & (man_r > 1) & (walls[man_r - 1][man_c] = 0) & !box_1_on_t;
    mv_d := (move = d) & (man_r < 3) & (walls[man_r + 1][man_c] = 0) & !box_1_on_b;
    box_1_on_r := (man_c + 1 = box_1_c) & (man_r = box_1_r);
    box_1_on_rp1 := (man_c + 2 = box_1_c) & (man_r = box_1_r);
    box_1_on_l := (man_c - 1 = box_1_c) & (man_r = box_1_r);
    box_1_on_lp1 := (man_c - 2 = box_1_c) & (man_r = box_1_r);
    box_1_on_t := (man_c = box_1_c) & (man_r - 1 = box_1_r);
    box_1_on_tp1 := (man_c = box_1_c) & (man_r - 2 = box_1_r);
    box_1_on_b := (man_c = box_1_c) & (man_r + 1 = box_1_r);
    box_1_on_bp1 := (man_c = box_1_c) & (man_r + 2 = box_1_r);
    push_r := (move = r) & (walls[man_r][man_c + 2] = 0) & ((box_1_on_r));
    push_l := (move = l) & (walls[man_r][man_c - 2] = 0) & ((box_1_on_l));
    push_u := (move = u) & (walls[man_r - 2][man_c] = 0) & ((box_1_on_t));
    push_d := (move = d) & (walls[man_r + 2][man_c] = 0) & ((box_1_on_b));
    win := ((box_1_c = goal_1_c & box_1_r = goal_1_r));
LTLSPEC !F win;
